document.addEventListener("DOMContentLoaded", function () {
  console.log("üîç Day Filter Script Loaded");

  // Selecionar dias do calend√°rio
  const calendarDays = document.querySelectorAll(
    ".calendar-day:not(.empty-day)"
  );
  console.log(`üîç Found ${calendarDays.length} calendar days`);

  // Selecionar cart√µes de eventos
  const eventCards = document.querySelectorAll(".event-card");
  console.log(`üîç Found ${eventCards.length} event cards`);

  // Verificar se os cart√µes t√™m o atributo data-date
  let cardsWithDateAttr = 0;
  eventCards.forEach((card) => {
    if (card.dataset.date) {
      cardsWithDateAttr++;
    } else {
      console.warn("‚ö†Ô∏è Card without data-date attribute:", card);
    }
  });
  console.log(
    `üîç ${cardsWithDateAttr} of ${eventCards.length} cards have data-date attribute`
  );

  // Adicionar estilo a cada dia do calend√°rio
  calendarDays.forEach((day) => {
    // Garantir visualmente que est√° selecion√°vel
    day.style.cursor = "pointer";

    // Adicionar evento de clique com debug
    day.addEventListener("click", function (e) {
      console.log("üîç Calendar day clicked:", this);
      console.log("üîç Date attribute:", this.dataset.date);

      e.preventDefault(); // Previnir comportamento padr√£o se houver
      e.stopPropagation(); // Impedir propaga√ß√£o do evento

      const date = this.dataset.date;
      if (!date) {
        console.warn("‚ö†Ô∏è Clicked day has no date attribute");
        return;
      }

      // Remover sele√ß√£o de todos os dias
      calendarDays.forEach((d) => {
        d.classList.remove("selected-day");
        console.log("üîç Removed selection from day");
      });

      // Se j√° estava selecionado, apenas limpar a sele√ß√£o
      if (this.classList.contains("selected-day")) {
        console.log("üîç Day was already selected, showing all events");
        this.classList.remove("selected-day");

        // Mostrar todos os cards
        eventCards.forEach((card) => {
          card.style.display = "block";
        });
        return;
      }

      // Adicionar classe de sele√ß√£o
      this.classList.add("selected-day");
      console.log("üîç Added selected-day class");

      // Contar quantos eventos correspondem √† data
      let matchCount = 0;

      // Filtrar eventos
      eventCards.forEach((card) => {
        const cardDate = card.dataset.date;
        console.log(`üîç Card date: ${cardDate}, Selected date: ${date}`);

        if (cardDate === date) {
          card.style.display = "block";
          matchCount++;
        } else {
          card.style.display = "none";
        }
      });

      console.log(`üîç Found ${matchCount} matching events for date ${date}`);

      // Rolar para a lista de eventos
      const eventsContainer = document.querySelector(".events-list-container");
      if (eventsContainer) {
        eventsContainer.scrollIntoView({ behavior: "smooth" });
        console.log("üîç Scrolled to events container");
      } else {
        console.warn("‚ö†Ô∏è Events container not found");
      }
    });
  });

  // Adicionar bot√£o para limpar filtros
  const filtersArea = document.querySelector(".events-filters");
  if (filtersArea) {
    console.log("üîç Found filters area, adding clear button");

    const clearBtn = document.createElement("button");
    clearBtn.className = "btn btn-sm btn-secondary";
    clearBtn.textContent = "Limpar filtro do calend√°rio";
    clearBtn.style.marginLeft = "auto";

    clearBtn.addEventListener("click", function () {
      console.log("üîç Clear button clicked");

      // Remover sele√ß√µes do calend√°rio
      calendarDays.forEach((day) => {
        day.classList.remove("selected-day");
      });

      // Mostrar todos os eventos
      eventCards.forEach((card) => {
        card.style.display = "block";
      });
    });

    filtersArea.appendChild(clearBtn);
  } else {
    console.warn("‚ö†Ô∏è Filters area not found");
  }
});
